=== HASHES BCrypt PARA CONTRASEÑAS ORIGINALES DE POSTMAN ===

Estos hashes fueron generados con BCrypt y funcionan para las contraseñas originales:

1. ADMIN: admin@erp.com / admin1234
Hash: $2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi

2. SUPERVISOR: supervisor@erp.com / supervisor123  
Hash: $2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi

3. USER: user@erp.com / user123
Hash: $2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi

=== SCRIPT SQL PARA ACTUALIZAR ===

USE erp_sena;

-- Actualizar contraseñas con hashes BCrypt correctos
UPDATE usuario SET password = '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi' WHERE correo = 'admin@erp.com';
UPDATE usuario SET password = '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi' WHERE correo = 'supervisor@erp.com';
UPDATE usuario SET password = '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi' WHERE correo = 'user@erp.com';

-- Verificar usuarios actualizados
SELECT correo, nombre, rol, 
       CASE 
           WHEN password LIKE '$2a$%' THEN 'HASHEADO'
           ELSE 'NO HASHEADO'
       END as estado_password,
       LENGTH(password) as longitud_hash
FROM usuario 
WHERE correo IN ('admin@erp.com', 'supervisor@erp.com', 'user@erp.com')
ORDER BY correo; 