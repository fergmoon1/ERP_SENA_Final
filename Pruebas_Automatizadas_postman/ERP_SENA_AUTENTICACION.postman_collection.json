{
  "info": {
    "_postman_id": "erp-sena-autenticacion-collection",
    "name": "ERP SENA - Autenticación (Automatizada)",
    "description": "Colección de endpoints de autenticación para ERP SENA: login, refresh, logout, usuario actual. Incluye tests y variables para Admin, Supervisor y User.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login ADMIN",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    var json = pm.response.json();",
              "    pm.environment.set('token_admin', json.token);",
              "    pm.environment.set('refreshToken_admin', json.refreshToken);",
              "    pm.test('Login ADMIN exitoso', function () {",
              "        pm.response.to.have.status(200);",
              "        pm.expect(json).to.have.property('token');",
              "        pm.expect(json).to.have.property('refreshToken');",
              "    });",
              "} else {",
              "    pm.test('Login ADMIN fallido', function () {",
              "        pm.response.to.have.status(200);",
              "    });",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"correo\": \"admin@erp.com\",\n  \"password\": \"admin1234\",\n  \"recaptcha-token\": \"test\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/login",
          "host": ["{{base_url}}"],
          "path": ["auth", "login"]
        }
      }
    },
    {
      "name": "Refresh Token (ADMIN)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    var json = pm.response.json();",
              "    pm.environment.set('token_admin', json.token);",
              "    pm.environment.set('refreshToken_admin', json.refreshToken);",
              "    pm.test('Refresh token ADMIN exitoso', function () {",
              "        pm.response.to.have.status(200);",
              "        pm.expect(json).to.have.property('token');",
              "        pm.expect(json).to.have.property('refreshToken');",
              "    });",
              "} else {",
              "    pm.test('Refresh token ADMIN fallido', function () {",
              "        pm.response.to.have.status(200);",
              "    });",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refreshToken\": \"{{refreshToken_admin}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/refresh",
          "host": ["{{base_url}}"],
          "path": ["auth", "refresh"]
        }
      }
    },
    {
      "name": "Logout (ADMIN)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Logout ADMIN exitoso', function () {",
              "    pm.response.to.have.status(200);",
              "    var json = pm.response.json();",
              "    pm.expect(json).to.have.property('message');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refreshToken\": \"{{refreshToken_admin}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/logout",
          "host": ["{{base_url}}"],
          "path": ["auth", "logout"]
        }
      }
    },
    {
      "name": "Obtener Usuario Actual (ADMIN)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Usuario actual obtenido (ADMIN)', function () {",
              "    pm.response.to.have.status(200);",
              "    var json = pm.response.json();",
              "    pm.expect(json).to.have.property('correo');",
              "    pm.expect(json.rol).to.eql('ADMIN');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token_admin}}" }
        ],
        "url": {
          "raw": "{{base_url}}/auth/me",
          "host": ["{{base_url}}"],
          "path": ["auth", "me"]
        }
      }
    },
    {
      "name": "Login SUPERVISOR",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    var json = pm.response.json();",
              "    pm.environment.set('token_supervisor', json.token);",
              "    pm.environment.set('refreshToken_supervisor', json.refreshToken);",
              "    pm.test('Login SUPERVISOR exitoso', function () {",
              "        pm.response.to.have.status(200);",
              "        pm.expect(json).to.have.property('token');",
              "        pm.expect(json).to.have.property('refreshToken');",
              "    });",
              "} else {",
              "    pm.test('Login SUPERVISOR fallido', function () {",
              "        pm.response.to.have.status(200);",
              "    });",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"correo\": \"supervisor@erp.com\",\n  \"password\": \"supervisor123\",\n  \"recaptcha-token\": \"test\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/login",
          "host": ["{{base_url}}"],
          "path": ["auth", "login"]
        }
      }
    },
    {
      "name": "Refresh Token (SUPERVISOR)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    var json = pm.response.json();",
              "    pm.environment.set('token_supervisor', json.token);",
              "    pm.environment.set('refreshToken_supervisor', json.refreshToken);",
              "    pm.test('Refresh token SUPERVISOR exitoso', function () {",
              "        pm.response.to.have.status(200);",
              "        pm.expect(json).to.have.property('token');",
              "        pm.expect(json).to.have.property('refreshToken');",
              "    });",
              "} else {",
              "    pm.test('Refresh token SUPERVISOR fallido', function () {",
              "        pm.response.to.have.status(200);",
              "    });",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refreshToken\": \"{{refreshToken_supervisor}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/refresh",
          "host": ["{{base_url}}"],
          "path": ["auth", "refresh"]
        }
      }
    },
    {
      "name": "Logout (SUPERVISOR)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Logout SUPERVISOR exitoso', function () {",
              "    pm.response.to.have.status(200);",
              "    var json = pm.response.json();",
              "    pm.expect(json).to.have.property('message');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refreshToken\": \"{{refreshToken_supervisor}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/logout",
          "host": ["{{base_url}}"],
          "path": ["auth", "logout"]
        }
      }
    },
    {
      "name": "Obtener Usuario Actual (SUPERVISOR)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Usuario actual obtenido (SUPERVISOR)', function () {",
              "    pm.response.to.have.status(200);",
              "    var json = pm.response.json();",
              "    pm.expect(json).to.have.property('correo');",
              "    pm.expect(json.rol).to.eql('SUPERVISOR');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token_supervisor}}" }
        ],
        "url": {
          "raw": "{{base_url}}/auth/me",
          "host": ["{{base_url}}"],
          "path": ["auth", "me"]
        }
      }
    },
    {
      "name": "Login USER",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    var json = pm.response.json();",
              "    pm.environment.set('token_user', json.token);",
              "    pm.environment.set('refreshToken_user', json.refreshToken);",
              "    pm.test('Login USER exitoso', function () {",
              "        pm.response.to.have.status(200);",
              "        pm.expect(json).to.have.property('token');",
              "        pm.expect(json).to.have.property('refreshToken');",
              "    });",
              "} else {",
              "    pm.test('Login USER fallido', function () {",
              "        pm.response.to.have.status(200);",
              "    });",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"correo\": \"user@erp.com\",\n  \"password\": \"user123\",\n  \"recaptcha-token\": \"test\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/login",
          "host": ["{{base_url}}"],
          "path": ["auth", "login"]
        }
      }
    },
    {
      "name": "Refresh Token (USER)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    var json = pm.response.json();",
              "    pm.environment.set('token_user', json.token);",
              "    pm.environment.set('refreshToken_user', json.refreshToken);",
              "    pm.test('Refresh token USER exitoso', function () {",
              "        pm.response.to.have.status(200);",
              "        pm.expect(json).to.have.property('token');",
              "        pm.expect(json).to.have.property('refreshToken');",
              "    });",
              "} else {",
              "    pm.test('Refresh token USER fallido', function () {",
              "        pm.response.to.have.status(200);",
              "    });",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refreshToken\": \"{{refreshToken_user}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/refresh",
          "host": ["{{base_url}}"],
          "path": ["auth", "refresh"]
        }
      }
    },
    {
      "name": "Logout (USER)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Logout USER exitoso', function () {",
              "    pm.response.to.have.status(200);",
              "    var json = pm.response.json();",
              "    pm.expect(json).to.have.property('message');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refreshToken\": \"{{refreshToken_user}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/logout",
          "host": ["{{base_url}}"],
          "path": ["auth", "logout"]
        }
      }
    },
    {
      "name": "Obtener Usuario Actual (USER)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Usuario actual obtenido (USER)', function () {",
              "    pm.response.to.have.status(200);",
              "    var json = pm.response.json();",
              "    pm.expect(json).to.have.property('correo');",
              "    pm.expect(json.rol).to.eql('USER');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token_user}}" }
        ],
        "url": {
          "raw": "{{base_url}}/auth/me",
          "host": ["{{base_url}}"],
          "path": ["auth", "me"]
        }
      }
    }
  ]
} 